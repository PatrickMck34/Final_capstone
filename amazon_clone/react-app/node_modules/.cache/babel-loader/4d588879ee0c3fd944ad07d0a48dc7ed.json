{"ast":null,"code":"const READ_USERS = \"/user\";\nconst READ_USER = \"/user/:userId\";\nexport const getUser = () => async dispatch => {\n  const data = await fetch(\"/api\");\n  if (data.ok) {\n    const response = await data.Json();\n    dispatch(readUser(response));\n    return response;\n    // } else if (response.status < 500) {\n    //     const data = await response.json();\n    //     if (data.errors) {\n    //         return data.errors;\n    //     }\n    // } else {\n    //     return [\"An error occurred. Please try again.\"];\n  }\n};\n\nexport const emailExists = email => async dispatch => {\n  const res = await fetch(`/api/users/emailExists`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email\n    })\n  });\n  const data = await res.json();\n  return data;\n};\nexport const getUserById = userId => async dispatch => {\n  const data = await fetch(`/api/${userId}`);\n  const user = await data.json();\n  dispatch(readUser(user));\n  return user;\n};\nexport const readUsers = user => ({\n  type: READ_USERS,\n  payload: user\n});\nexport const readUser = user => ({\n  type: READ_USER,\n  payload: user\n});\nexport const getUserFollowers = userId => async dispatch => {\n  const data = await fetch(`/api/users/${userId}/followers`);\n  const followers = await data.json();\n  dispatch(readUserFollowers(followers));\n  return followers;\n};\nlet initialState = {\n  allUsers: {},\n  singleUser: {}\n};\nexport default function userReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case READ_USERS:\n      newState = {\n        ...state,\n        allUsers: {}\n      };\n      action.payload.forEach(user => newState.allUsers[user.id] = user);\n      return newState;\n    case READ_USER:\n      newState = {\n        ...state,\n        singleUser: {}\n      };\n      newState.singleUser = action.payload;\n      return newState;\n    default:\n      return state;\n  }\n  ;\n}","map":{"version":3,"names":["READ_USERS","READ_USER","getUser","dispatch","data","fetch","ok","response","Json","readUser","emailExists","email","res","method","headers","body","JSON","stringify","json","getUserById","userId","user","readUsers","type","payload","getUserFollowers","followers","readUserFollowers","initialState","allUsers","singleUser","userReducer","state","action","newState","forEach","id"],"sources":["/home/patrick/cap_final/amazon_clone/react-app/src/store/user.js"],"sourcesContent":["const READ_USERS = \"/user\"\nconst READ_USER = \"/user/:userId\"\n\n\n\n\nexport const getUser = () => async (dispatch) => {\n    const data = await fetch(\"/api\")\n    if (data.ok) {\n        const response = await data.Json()\n        dispatch(readUser(response))\n        return response\n        // } else if (response.status < 500) {\n        //     const data = await response.json();\n        //     if (data.errors) {\n        //         return data.errors;\n        //     }\n        // } else {\n        //     return [\"An error occurred. Please try again.\"];\n    }\n}\n\nexport const emailExists = (email) => async (dispatch) => {\n    const res = await fetch(`/api/users/emailExists`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({email})\n    })\n\n    const data = await res.json();\n    return data;\n}\n\n\n\nexport const getUserById = (userId) => async (dispatch) => {\n    const data = await fetch(`/api/${userId}`)\n\n    const user = await data.json()\n\n    dispatch(readUser(user))\n    return user\n}\nexport const readUsers = (user) => ({\n    type: READ_USERS,\n    payload: user\n})\n\nexport const readUser = (user) => ({\n    type: READ_USER,\n    payload: user\n})\n\n\n\nexport const getUserFollowers = (userId) => async (dispatch) => {\n    const data = await fetch(`/api/users/${userId}/followers`)\n\n    const followers = await data.json()\n\n    dispatch(readUserFollowers(followers))\n    return followers\n}\n\n\nlet initialState = { allUsers: {}, singleUser: {} }\nexport default function userReducer(state = initialState, action) {\n    let newState = {}\n    switch (action.type) {\n        case READ_USERS:\n            newState = { ...state, allUsers: {} }\n\n            action.payload.forEach(user => newState.allUsers[user.id] = user)\n            return newState\n\n        case READ_USER:\n            newState = { ...state, singleUser: {} };\n            newState.singleUser = action.payload\n            return newState\n\n   \n\n        default:\n            return state;\n    };\n\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG,OAAO;AAC1B,MAAMC,SAAS,GAAG,eAAe;AAKjC,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC7C,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,MAAM,CAAC;EAChC,IAAID,IAAI,CAACE,EAAE,EAAE;IACT,MAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACI,IAAI,EAAE;IAClCL,QAAQ,CAACM,QAAQ,CAACF,QAAQ,CAAC,CAAC;IAC5B,OAAOA,QAAQ;IACf;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AACJ,CAAC;;AAED,OAAO,MAAMG,WAAW,GAAIC,KAAK,IAAK,MAAOR,QAAQ,IAAK;EACtD,MAAMS,GAAG,GAAG,MAAMP,KAAK,CAAE,wBAAuB,EAAE;IAC9CQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACN;IAAK,CAAC;EAChC,CAAC,CAAC;EAEF,MAAMP,IAAI,GAAG,MAAMQ,GAAG,CAACM,IAAI,EAAE;EAC7B,OAAOd,IAAI;AACf,CAAC;AAID,OAAO,MAAMe,WAAW,GAAIC,MAAM,IAAK,MAAOjB,QAAQ,IAAK;EACvD,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,QAAOe,MAAO,EAAC,CAAC;EAE1C,MAAMC,IAAI,GAAG,MAAMjB,IAAI,CAACc,IAAI,EAAE;EAE9Bf,QAAQ,CAACM,QAAQ,CAACY,IAAI,CAAC,CAAC;EACxB,OAAOA,IAAI;AACf,CAAC;AACD,OAAO,MAAMC,SAAS,GAAID,IAAI,KAAM;EAChCE,IAAI,EAAEvB,UAAU;EAChBwB,OAAO,EAAEH;AACb,CAAC,CAAC;AAEF,OAAO,MAAMZ,QAAQ,GAAIY,IAAI,KAAM;EAC/BE,IAAI,EAAEtB,SAAS;EACfuB,OAAO,EAAEH;AACb,CAAC,CAAC;AAIF,OAAO,MAAMI,gBAAgB,GAAIL,MAAM,IAAK,MAAOjB,QAAQ,IAAK;EAC5D,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,cAAae,MAAO,YAAW,CAAC;EAE1D,MAAMM,SAAS,GAAG,MAAMtB,IAAI,CAACc,IAAI,EAAE;EAEnCf,QAAQ,CAACwB,iBAAiB,CAACD,SAAS,CAAC,CAAC;EACtC,OAAOA,SAAS;AACpB,CAAC;AAGD,IAAIE,YAAY,GAAG;EAAEC,QAAQ,EAAE,CAAC,CAAC;EAAEC,UAAU,EAAE,CAAC;AAAE,CAAC;AACnD,eAAe,SAASC,WAAW,GAA+B;EAAA,IAA9BC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAC5D,IAAIC,QAAQ,GAAG,CAAC,CAAC;EACjB,QAAQD,MAAM,CAACV,IAAI;IACf,KAAKvB,UAAU;MACXkC,QAAQ,GAAG;QAAE,GAAGF,KAAK;QAAEH,QAAQ,EAAE,CAAC;MAAE,CAAC;MAErCI,MAAM,CAACT,OAAO,CAACW,OAAO,CAACd,IAAI,IAAIa,QAAQ,CAACL,QAAQ,CAACR,IAAI,CAACe,EAAE,CAAC,GAAGf,IAAI,CAAC;MACjE,OAAOa,QAAQ;IAEnB,KAAKjC,SAAS;MACViC,QAAQ,GAAG;QAAE,GAAGF,KAAK;QAAEF,UAAU,EAAE,CAAC;MAAE,CAAC;MACvCI,QAAQ,CAACJ,UAAU,GAAGG,MAAM,CAACT,OAAO;MACpC,OAAOU,QAAQ;IAInB;MACI,OAAOF,KAAK;EAAC;EACpB;AAEL"},"metadata":{},"sourceType":"module"}