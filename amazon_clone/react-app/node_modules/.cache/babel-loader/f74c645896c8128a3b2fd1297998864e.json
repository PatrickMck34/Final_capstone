{"ast":null,"code":"const READ_ItemS = '/Items';\nconst DELETE_Item = '/Items/:ItemId';\nconst CREATE_Item = '/Items/new';\nconst READ_Item = '/Items/spotsid';\nexport const createItem = items => async dispatch => {\n  const {\n    item,\n    stars,\n    spotId\n  } = items;\n  const data = await fetch(`/api/item`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      item,\n      stars\n    })\n  });\n  const response = await data.json();\n  dispatch(createItems(response));\n  return response;\n};\nexport const createItems = Item => ({\n  type: CREATE_Item,\n  payload: Item\n});\nexport const getItems = spotId => async dispatch => {\n  const data = await fetch(`/api/spots/${spotId}/Items`);\n  const response = await data.json();\n  dispatch(getItem(response));\n  return response;\n};\nexport const getItem = Item => ({\n  type: READ_ItemS,\n  payload: Item\n});\nexport const deleteItems = id => async dispatch => {\n  const response = await fetch(`/api/Items/${id}`, {\n    method: 'DELETE'\n  });\n  dispatch(deleteItem(id));\n  return response;\n};\nexport const deleteItem = ItemId => {\n  return {\n    type: DELETE_Item,\n    ItemId\n  };\n};\nconst initialState = {\n  allItems: {},\n  singleSpotItems: {}\n};\nexport const ItemsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case CREATE_Item:\n      newState = {\n        allItems: {\n          ...state.allItems\n        }\n      };\n      newState.allItems[action.payload.id] = action.payload;\n      return newState;\n    case READ_ItemS:\n      newState = {\n        allItems: {}\n      };\n      action.payload.Items.forEach(Items => newState.allItems[Items.id] = Items);\n      return newState;\n    case READ_Item:\n      newState = {\n        singleSpotItems: {}\n      };\n      action.payload.Items.forEach(Items => newState.singleSpotItems[Items.id] = Items);\n      return newState;\n    case DELETE_Item:\n      newState = {\n        ...state\n      };\n      delete newState[action.payload];\n    default:\n      return state;\n  }\n};\n_c = ItemsReducer;\nexport default ItemsReducer;\nvar _c;\n$RefreshReg$(_c, \"ItemsReducer\");","map":{"version":3,"names":["READ_ItemS","DELETE_Item","CREATE_Item","READ_Item","createItem","items","dispatch","item","stars","spotId","data","fetch","method","body","JSON","stringify","response","json","createItems","Item","type","payload","getItems","getItem","deleteItems","id","deleteItem","ItemId","initialState","allItems","singleSpotItems","ItemsReducer","state","action","newState","Items","forEach"],"sources":["/home/patrick/cap_final/amazon_clone/react-app/src/store/item.js"],"sourcesContent":["const READ_ItemS = '/Items'\nconst DELETE_Item = '/Items/:ItemId';\nconst CREATE_Item = '/Items/new'\nconst READ_Item = '/Items/spotsid'\n\nexport const createItem = (items) => async (dispatch) => {\n    const {item, stars, spotId} = items\n const data = await fetch(`/api/item` , {\n        method: \"POST\",\n        body: JSON.stringify({\n           item, stars\n        }),\n    });\n    const response = await data.json()\n    \n    dispatch(createItems(response))\n    return response\n}\n\nexport const createItems = (Item) =>({\n    type: CREATE_Item,\n    payload: Item\n})\nexport const getItems = (spotId) => async (dispatch) => {\nconst data = await fetch(`/api/spots/${spotId}/Items`)\n    const response = await data.json()\n    dispatch(getItem(response))\n    return response\n}\nexport const getItem = (Item) =>({\n    type: READ_ItemS,\n    payload: Item\n})\nexport const deleteItems = (id) => async (dispatch) => {\n    const response = await fetch(`/api/Items/${id}`, {\n        method: 'DELETE',\n    });\n    dispatch(deleteItem(id));\n    return response;\n};\nexport  const deleteItem = (ItemId) => {\n    return {\n        type: DELETE_Item,\n        ItemId\n    };\n};\n\nconst initialState =  {allItems:{}, singleSpotItems: {}}\nexport const ItemsReducer = (state = initialState, action) => {\n    let newState = {}\n    \n    switch (action.type) {\n               case CREATE_Item:\n                 newState = { allItems:{...state.allItems}} \n                newState.allItems[action.payload.id] = action.payload\n                return newState\n\n                case READ_ItemS:\n                 newState ={allItems: {} };\n                 action.payload.Items.forEach(Items => newState.allItems[Items.id] = Items)\n                return newState\n\n                case READ_Item:\n                 newState ={singleSpotItems: {} };\n                 action.payload.Items.forEach(Items => newState.singleSpotItems[Items.id] = Items)\n                return newState \n\n                case DELETE_Item:\n             newState = {...state}\n             delete newState[action.payload]\n            \n      default:\n    return state\n}}\nexport default ItemsReducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}