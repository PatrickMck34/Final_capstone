{"ast":null,"code":"const READ_REVIEWS = '/reviews';\nconst DELETE_REVIEW = '/reviews/:reviewId';\nconst CREATE_REVIEW = '/reviews/new';\nconst READ_REVIEW = '/reviews/spotsid';\nexport const createItem = reviews => async dispatch => {\n  const {\n    review,\n    stars,\n    spotId\n  } = reviews;\n  const data = await fetch(`/api/spots/${spotId}/reviews`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      review,\n      stars\n    })\n  });\n  const response = await data.json();\n  dispatch(createReview(response));\n  return response;\n};\nexport const createReview = review => ({\n  type: CREATE_REVIEW,\n  payload: review\n});\nexport const getReviews = spotId => async dispatch => {\n  const data = await fetch(`/api/spots/${spotId}/reviews`);\n  const response = await data.json();\n  dispatch(getReview(response));\n  return response;\n};\nexport const getReview = review => ({\n  type: READ_REVIEWS,\n  payload: review\n});\nexport const deleteReviews = id => async dispatch => {\n  const response = await fetch(`/api/reviews/${id}`, {\n    method: 'DELETE'\n  });\n  dispatch(deleteReview(id));\n  return response;\n};\nexport const deleteReview = reviewId => {\n  return {\n    type: DELETE_REVIEW,\n    reviewId\n  };\n};\nconst initialState = {\n  allReviews: {},\n  singleSpotReviews: {}\n};\nexport const reviewsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case CREATE_REVIEW:\n      newState = {\n        allReviews: {\n          ...state.allReviews\n        }\n      };\n      newState.allReviews[action.payload.id] = action.payload;\n      return newState;\n    case READ_REVIEWS:\n      newState = {\n        allReviews: {}\n      };\n      action.payload.Reviews.forEach(reviews => newState.allReviews[reviews.id] = reviews);\n      return newState;\n    case READ_REVIEW:\n      newState = {\n        singleSpotReviews: {}\n      };\n      action.payload.Reviews.forEach(reviews => newState.singleSpotReviews[reviews.id] = reviews);\n      return newState;\n    case DELETE_REVIEW:\n      newState = {\n        ...state\n      };\n      delete newState[action.payload];\n    default:\n      return state;\n  }\n};\nexport default reviewsReducer;","map":{"version":3,"names":["READ_REVIEWS","DELETE_REVIEW","CREATE_REVIEW","READ_REVIEW","createItem","reviews","dispatch","review","stars","spotId","data","fetch","method","body","JSON","stringify","response","json","createReview","type","payload","getReviews","getReview","deleteReviews","id","deleteReview","reviewId","initialState","allReviews","singleSpotReviews","reviewsReducer","state","action","newState","Reviews","forEach"],"sources":["/home/patrick/cap_final/amazon_clone/react-app/src/store/item.js"],"sourcesContent":["const READ_REVIEWS = '/reviews'\nconst DELETE_REVIEW = '/reviews/:reviewId';\nconst CREATE_REVIEW = '/reviews/new'\nconst READ_REVIEW = '/reviews/spotsid'\n\nexport const createItem = (reviews) => async (dispatch) => {\n    const {review, stars, spotId} = reviews\n const data = await fetch(`/api/spots/${spotId}/reviews` , {\n        method: \"POST\",\n        body: JSON.stringify({\n           review, stars\n        }),\n    });\n    const response = await data.json()\n    \n    dispatch(createReview(response))\n    return response\n}\n\nexport const createReview = (review) =>({\n    type: CREATE_REVIEW,\n    payload: review\n})\nexport const getReviews = (spotId) => async (dispatch) => {\nconst data = await fetch(`/api/spots/${spotId}/reviews`)\n    const response = await data.json()\n    dispatch(getReview(response))\n    return response\n}\nexport const getReview = (review) =>({\n    type: READ_REVIEWS,\n    payload: review\n})\nexport const deleteReviews = (id) => async (dispatch) => {\n    const response = await fetch(`/api/reviews/${id}`, {\n        method: 'DELETE',\n    });\n    dispatch(deleteReview(id));\n    return response;\n};\nexport  const deleteReview = (reviewId) => {\n    return {\n        type: DELETE_REVIEW,\n        reviewId\n    };\n};\n\nconst initialState =  {allReviews:{}, singleSpotReviews: {}}\nexport const reviewsReducer = (state = initialState, action) => {\n    let newState = {}\n    \n    switch (action.type) {\n               case CREATE_REVIEW:\n                 newState = { allReviews:{...state.allReviews}} \n                newState.allReviews[action.payload.id] = action.payload\n                return newState\n\n                case READ_REVIEWS:\n                 newState ={allReviews: {} };\n                 action.payload.Reviews.forEach(reviews => newState.allReviews[reviews.id] = reviews)\n                return newState\n\n                case READ_REVIEW:\n                 newState ={singleSpotReviews: {} };\n                 action.payload.Reviews.forEach(reviews => newState.singleSpotReviews[reviews.id] = reviews)\n                return newState \n\n                case DELETE_REVIEW:\n             newState = {...state}\n             delete newState[action.payload]\n            \n      default:\n    return state\n}}\nexport default reviewsReducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}