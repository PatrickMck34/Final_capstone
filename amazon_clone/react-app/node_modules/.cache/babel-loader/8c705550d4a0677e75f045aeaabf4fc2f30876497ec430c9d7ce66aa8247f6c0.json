{"ast":null,"code":"const READ_REVIEWS = '/reviews';\nconst DELETE_REVIEW = '/reviews/:reviewId';\nconst CREATE_REVIEW = '/reviews/new';\nconst READ_REVIEW = '/reviews/spotsid';\nexport const createReviews = reviews => async dispatch => {\n  const {\n    review,\n    stars,\n    spotId\n  } = reviews;\n  const data = await fetch(`/api/spots/${spotId}/reviews`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      review,\n      stars\n    })\n  });\n  const response = await data.json();\n  dispatch(createReview(response));\n  return response;\n};\nexport const createReview = review => ({\n  type: CREATE_REVIEW,\n  payload: review\n});\nexport const getReviews = spotId => async dispatch => {\n  const data = await fetch(`/api/spots/${spotId}/reviews`);\n  const response = await data.json();\n  dispatch(getReview(response));\n  return response;\n};\nexport const getReview = review => ({\n  type: READ_REVIEWS,\n  payload: review\n});\nexport const deleteReviews = id => async dispatch => {\n  const response = await fetch(`/api/reviews/${id}`, {\n    method: 'DELETE'\n  });\n  dispatch(deleteReview(id));\n  return response;\n};\nexport const deleteReview = reviewId => {\n  return {\n    type: DELETE_REVIEW,\n    reviewId\n  };\n};\nconst initialState = {\n  allReviews: {},\n  singleSpotReviews: {}\n};\nexport default function reviewsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case CREATE_REVIEW:\n      newState = {\n        allReviews: {\n          ...state.allReviews\n        }\n      };\n      newState.allReviews[action.payload.id] = action.payload;\n      return newState;\n    case READ_REVIEWS:\n      newState = {\n        allReviews: {}\n      };\n      action.payload.Reviews.forEach(reviews => newState.allReviews[reviews.id] = reviews);\n      return newState;\n    case READ_REVIEW:\n      newState = {\n        singleSpotReviews: {}\n      };\n      action.payload.Reviews.forEach(reviews => newState.singleSpotReviews[reviews.id] = reviews);\n      return newState;\n    case DELETE_REVIEW:\n      newState = {\n        ...state\n      };\n      delete newState[action.payload];\n      return state;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["READ_REVIEWS","DELETE_REVIEW","CREATE_REVIEW","READ_REVIEW","createReviews","reviews","dispatch","review","stars","spotId","data","fetch","method","body","JSON","stringify","response","json","createReview","type","payload","getReviews","getReview","deleteReviews","id","deleteReview","reviewId","initialState","allReviews","singleSpotReviews","reviewsReducer","state","arguments","length","undefined","action","newState","Reviews","forEach"],"sources":["/home/patrick/aclone/Final_capstone/amazon_clone/react-app/src/store/review.js"],"sourcesContent":["\n\nconst READ_REVIEWS = '/reviews'\nconst DELETE_REVIEW = '/reviews/:reviewId';\nconst CREATE_REVIEW = '/reviews/new'\nconst READ_REVIEW = '/reviews/spotsid'\n\nexport const createReviews = (reviews) => async (dispatch) => {\n    const {review, stars, spotId} = reviews\n const data = await fetch(`/api/spots/${spotId}/reviews` , {\n        method: \"POST\",\n        body: JSON.stringify({\n           review, stars\n        }),\n    });\n    const response = await data.json()\n    \n    dispatch(createReview(response))\n    return response\n}\n\nexport const createReview = (review) =>({\n    type: CREATE_REVIEW,\n    payload: review\n})\nexport const getReviews = (spotId) => async (dispatch) => {\nconst data = await fetch(`/api/spots/${spotId}/reviews`)\n    const response = await data.json()\n    dispatch(getReview(response))\n    return response\n}\nexport const getReview = (review) =>({\n    type: READ_REVIEWS,\n    payload: review\n})\nexport const deleteReviews = (id) => async (dispatch) => {\n    const response = await fetch(`/api/reviews/${id}`, {\n        method: 'DELETE',\n    });\n    dispatch(deleteReview(id));\n    return response;\n};\nexport  const deleteReview = (reviewId) => {\n    return {\n        type: DELETE_REVIEW,\n        reviewId\n    };\n};\n\nconst initialState =  {allReviews:{}, singleSpotReviews: {}}\nexport default function reviewsReducer(state = initialState, action) {\n    let newState = {}\n    \n    switch (action.type) {\n               case CREATE_REVIEW:\n                 newState = { allReviews:{...state.allReviews}} \n                newState.allReviews[action.payload.id] = action.payload\n                return newState\n\n                case READ_REVIEWS:\n                 newState ={allReviews: {} };\n                 action.payload.Reviews.forEach(reviews => newState.allReviews[reviews.id] = reviews)\n                return newState\n\n                case READ_REVIEW:\n                 newState ={singleSpotReviews: {} };\n                 action.payload.Reviews.forEach(reviews => newState.singleSpotReviews[reviews.id] = reviews)\n                return newState \n\n                case DELETE_REVIEW:\n             newState = {...state}\n             delete newState[action.payload]\n            return state\n      default:\n    return state\n}}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}